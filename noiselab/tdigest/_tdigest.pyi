import typing as typ
import numpy as np

class TDigest(object):

    def __init__(self, compression = 100.0): ...

    @property
    def compression(self) -> int: ...

    @property
    def size(self) -> int: ...

    @property
    def centroid_count(self) -> int: ...

    @property
    def min(self) -> float: ...

    @property
    def max(self) -> float: ...

    def reset(self) -> None: ...

    def compress(self) -> None: ...

    def add(self, val: float, weight = 1) -> None: ...

    def extend(self, values: np.ndarray, weights: np.ndarray = None) -> None: ...

    def merge(self, other: TDigest) -> None: ...

    def cdf(self, x: float) -> float: ...

    def cdfs(self, x: np.ndarray) -> np.ndarray: ...

    def quantile(self, q: float) -> float: ...

    def quantiles(self, q: np.ndarray) -> np.ndarray: ...
    
    def trimmed_mean(self, left: float, right: float) -> float: ...
    
    def trimmed_mean_symmetric(self, trim: float) -> float: ...

    def centroids(self) -> (np.ndarray, np.ndarray): ...
